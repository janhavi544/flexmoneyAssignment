{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nfunction useForm() {\n  _s();\n  //Form values\n  const [values, setValues] = useState({});\n  //Errors\n  const [errors, setErrors] = useState({});\n\n  //A method to handle form inputs\n  const handleChange = event => {\n    //To stop default events    \n    event.persist();\n    let name = event.target.name;\n    let val = event.target.value;\n\n    //Let's set these values in state\n    setValues({\n      ...values,\n      [name]: val\n    });\n  };\n  const validate = (event, name, value) => {\n    //A function to validate each input values\n\n    switch (name) {\n      case 'username':\n        if (value.length <= 4) {\n          // we will set the error state\n\n          setErrors({\n            ...errors,\n            username: 'Username atleast have 5 letters'\n          });\n        } else {\n          // set the error state empty or remove the error for username input\n\n          //omit function removes/omits the value from given object and returns a new object\n          let newObj = omit(errors, \"username\");\n          setErrors(newObj);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  return values, errors, handleChange;\n}\n_s(useForm, \"oIbDGYi0uOTpTzOl9U/+/w4jPVs=\");\nexport default useForm;","map":{"version":3,"names":["useState","useForm","values","setValues","errors","setErrors","handleChange","event","persist","name","target","val","value","validate","length","username","newObj","omit"],"sources":["D:/webD/flexmoney/form/src/hooks/useForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useForm  ()  {\r\n    //Form values\r\n    const [values, setValues] = useState({});\r\n    //Errors\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n  //A method to handle form inputs\r\n    const handleChange = (event) => {\r\n        //To stop default events    \r\n        event.persist();\r\n\r\n        let name = event.target.name;\r\n        let val = event.target.value;\r\n\r\n        //Let's set these values in state\r\n        setValues({\r\n            ...values,\r\n            [name]:val,\r\n        })\r\n\r\n    }\r\n    const validate = (event, name, value) => {\r\n        //A function to validate each input values\r\n    \r\n        switch (name) {\r\n            case 'username':\r\n                if (value.length <= 4) {\r\n                    // we will set the error state\r\n    \r\n                    setErrors({\r\n                        ...errors,\r\n                        username: 'Username atleast have 5 letters'\r\n                    })\r\n                } else {\r\n    // set the error state empty or remove the error for username input\r\n    \r\n    //omit function removes/omits the value from given object and returns a new object\r\n                    let newObj = omit(errors, \"username\");\r\n                    setErrors(newObj);\r\n    \r\n                }\r\n                break;\r\n    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return( values,\r\n        errors,\r\n        handleChange);\r\n    \r\n    }\r\n    \r\n    export default useForm"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,OAAO,GAAM;EAAA;EAClB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC;EACA,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAG1C;EACE,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC5B;IACAA,KAAK,CAACC,OAAO,EAAE;IAEf,IAAIC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACD,IAAI;IAC5B,IAAIE,GAAG,GAAGJ,KAAK,CAACG,MAAM,CAACE,KAAK;;IAE5B;IACAT,SAAS,CAAC;MACN,GAAGD,MAAM;MACT,CAACO,IAAI,GAAEE;IACX,CAAC,CAAC;EAEN,CAAC;EACD,MAAME,QAAQ,GAAG,CAACN,KAAK,EAAEE,IAAI,EAAEG,KAAK,KAAK;IACrC;;IAEA,QAAQH,IAAI;MACR,KAAK,UAAU;QACX,IAAIG,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;UACnB;;UAEAT,SAAS,CAAC;YACN,GAAGD,MAAM;YACTW,QAAQ,EAAE;UACd,CAAC,CAAC;QACN,CAAC,MAAM;UACnB;;UAEA;UACgB,IAAIC,MAAM,GAAGC,IAAI,CAACb,MAAM,EAAE,UAAU,CAAC;UACrCC,SAAS,CAACW,MAAM,CAAC;QAErB;QACA;MAEJ;QACI;IAAM;EAElB,CAAC;EACD,OAAQd,MAAM,EACVE,MAAM,EACNE,YAAY;AAEhB;AAAC,GApDIL,OAAO;AAsDZ,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}